refresh_rate: 30 seconds

appenders:
  stdout:
    kind: console

  blorb:
    kind: file
    path: "blorb.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  frame:
    kind: file
    path: "frame.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  header:
    kind: file
    path: "header.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  instruction:
    kind: file
    path: "instruction.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  input:
    kind: file
    path: "input.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  memory:
    kind: file
    path: "memory.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  object:
    kind: file
    path: "object.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  quetzal:
    kind: file
    path: "quetzal.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  sound:
    kind: file
    path: "sound.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  stack:
    kind: file
    path: "stack.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  stream:
    kind: file
    path: "stack.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  variable:
    kind: file
    path: "variable.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  trace:
    kind: file
    path: "trace.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]:{f}/{L} - {m}{n}"

root:
  level: info
  appenders:
    - trace

loggers:
  app::blorb:
    level: warn
    appenders:
      - blorb
    additive: false

  app::frame:
    level: warn
    appenders:
      - frame
    additive: false

  app::header:
    level: warn
    appenders:
      - header
    additive: false

  app::input:
    level: warn
    appenders:
      - input
    additive: false

  app::instruction:
    level: warn
    appenders:
      - instruction
    additive: false

  app::memory:
    level: warn
    appenders:
      - memory
    additive: false

  app::object:
    level: warn
    appenders:
      - object
    additive: false

  app::quetzal:
    level: warn
    appenders:
      - quetzal
    additive: false

  app::sound:
    level: warn
    appenders:
      - sound
    additive: false

  app::stack:
    level: warn
    appenders:
      - stack
    additive: false

  app::stream:
    level: warn
    appenders:
      - stack
    additive: false

  app::variable:
    level: warn
    appenders:
      - variable
    additive: false

  app::trace:
    level: info
    appenders:
      - trace
    additive: false
