refresh_rate: 30 seconds

appenders:
  stdout:
    kind: console

  instruction:
    kind: file
    path: "instruction.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"
  
  mxyzptlk:
    kind: file
    path: "mxyzptlk.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  resource:
    kind: file
    path: "resource.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  screen:
    kind: file
    path: "screen.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  sound:
    kind: file
    path: "sound.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  state:
    kind: file
    path: "state.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

  stream:
    kind: file
    path: "stack.log"
    append: false
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.3f)} {l} [{X(instruction_count)}]: {m}{n}"

root:
  level: info
  appenders:
    - mxyzptlk

loggers:
  app::instruction:
    level: info
    appenders:
      - instruction
      - mxyzptlk
    additive: false

  app::resource:
    level: info
    appenders:
      - resource
      - mxyzptlk
    additive: false

  app::screen:
    level: info
    appenders:
      - screen
      - mxyzptlk
    additive: false

  app::sound:
    level: info
    appenders:
      - sound
      - mxyzptlk
    additive: false

  app::state:
    level: info
    appenders:
      - state
      - mxyzptlk
    additive: false

  app::stream:
    level: info
    appenders:
      - stream
      - mxyzptlk
    additive: false
